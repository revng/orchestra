#@ load("@ytt:overlay", "overlay")
#@ load("/lib/create_component.lib.yml", "single_build_component")

#@ package_json_sha = "170f9c4509efc5065364e99ac32823bf8a37fcbf1a05dd7cf85a530e4173d851"

#@yaml/text-templated-strings
---
#@ def js_prerequisites_args():
configure: |
  JS_DIR="$ORCHESTRA_DOTDIR/support/js-prerequisites"
  mkdir -p "$BUILD_DIR"
  cd "$BUILD_DIR"
  cp -a "$JS_DIR/package.json" "$JS_DIR/yarn.lock" .

  #! check that package.json has the right hash, this is to trigger a rebuild in orchestra
  #! whenever we change the file
  echo '(@= package_json_sha @) package.json' | sha256sum -c -

  #! from the yarn.lock read the urls of the tars we have to download
  PACKAGE_URLS=$(grep 'resolved' yarn.lock | awk '{print $2}' | tr -d '"')
  while IFS= read -r URL; do
    fetch.sh "$URL"
  done <<< "$PACKAGE_URLS"

  #! each url is in the form https://<url>/<file>#<sha1>, the sed is to have `<sha1> <file>` to
  #! feed to sha1sum
  echo $PACKAGE_URLS | sed 's|.*/\(.*\)#\(\w*\)|\2 \1|g' | sha1sum -c -
install: |
  cd "$BUILD_DIR"
  mkdir "${DESTDIR}${ORCHESTRA_ROOT}/share/node_cache"

  #! copy all download packages to node_cache
  cp -a *.tgz "${DESTDIR}${ORCHESTRA_ROOT}/share/node_cache"

  #! Create a yarnrc file, this is to specify the needed settings to make `yarn install` work
  #! completely offline
  YARNRC="${DESTDIR}${ORCHESTRA_ROOT}/share/yarnrc"
  touch "$YARNRC"
  yarn -s config --use-yarnrc "$YARNRC" set disable-self-update-check true
  yarn -s config --use-yarnrc "$YARNRC" set nodedir "${ORCHESTRA_ROOT}/share/node_cache"
  echo '--install.offline' >> "$YARNRC"
  echo '--add.offline' >> "YARNRC"
#@ end

#@overlay/match by=overlay.all, expects=1
#@overlay/match-child-defaults missing_ok=True
---
components:
  revng-js-prerequisites: #@ single_build_component(**js_prerequisites_args())

#@ load("@ytt:overlay", "overlay")
#@ load("/lib/make.lib.yml", "make")
#@ load("/lib/ninja.lib.yml", "ninja")

#@yaml/text-templated-strings
---
#@ def llvm_documentation_component():
repository: llvm-project
license: llvm/LICENSE.TXT
builds:
  default:
    build_dependencies:
      - cmake
      - ninja
    configure: |
      mkdir -p "$BUILD_DIR"
      rsync \
        --archive --delete --quiet --exclude=.git \
        "$SOURCE_DIR/" "$BUILD_DIR/"
      mkdir -p "$BUILD_DIR/build"

      sed 's|FILE_PATTERNS|#FILE_PATTERNS|' -i "$BUILD_DIR"/*/docs/doxygen.cfg.in

      cd "$BUILD_DIR/build";
      cmake "$BUILD_DIR/llvm" \
        -GNinja \
        -DCMAKE_INSTALL_MESSAGE=NEVER \
        -DCMAKE_BUILD_TYPE="Debug" \
        -DLLVM_BUILD_DOCS=ON \
        -DLLVM_ENABLE_DOXYGEN=ON \
        -DLLVM_DOXYGEN_SVG=ON \
        -DLLVM_TARGETS_TO_BUILD="X86" \
        -DBUILD_SHARED_LIBS=ON \
        -DLLVM_ENABLE_PROJECTS="clang;mlir" \
        -Wno-dev
    install: |
      (@= ninja @) -C "$BUILD_DIR/build" doxygen-llvm doxygen-clang doxygen-mlir

      function make_docset {
        cd "$1"
        sed -i 's|$(XCODE_INSTALL)/usr/bin/docsetutil|'$ORCHESTRA_DOTDIR'/support/docsetutil|' Makefile
        sed -i 's|XCODE_INSTALL="$(shell xcode-select -print-path)"||' Makefile
        sed -i 's|<string>doxygen</string>|<string>'"$2"'</string>|' Info.plist
        sed -i 's|</dict>|<key>isJavaScriptEnabled</key><true/>\n</dict>|' Info.plist
        (@= make @)
        find "$2.docset/Contents/Resources/Documents" -iname "*.html" | xargs -n 10 sed -i -s 's/ inherit / /'

        download-file.sh "$2.docset/Contents/Resources/Documents" \
                         "https://opensource.apple.com/source/lldb/lldb-310.2.36/www/cpp_reference/html" \
                         "dynsections.js"
      }

      make_docset $BUILD_DIR/build/docs/doxygen/html/ llvm
      make_docset $BUILD_DIR/build/tools/clang/docs/doxygen/html/ clang
      make_docset $BUILD_DIR/build/tools/mlir/docs/doxygen/html/ mlir

      mkdir -p "${DESTDIR}${ORCHESTRA_ROOT}/share/doc/"{llvm,clang,mlir}
      cp -far --reflink=auto "$BUILD_DIR/build/docs/doxygen/html/llvm.docset" "${DESTDIR}${ORCHESTRA_ROOT}/share/doc/llvm"
      cp -far --reflink=auto "$BUILD_DIR/build/tools/clang/docs/doxygen/html/clang.docset" "${DESTDIR}${ORCHESTRA_ROOT}/share/doc/clang"
      cp -far --reflink=auto "$BUILD_DIR/build/tools/mlir/docs/doxygen/html/mlir.docset" "${DESTDIR}${ORCHESTRA_ROOT}/share/doc/mlir"

      cat <<EOF
      To install the Zeal docset run the following commands from command line:
      ZEAL_PATH="\${XDG_DATA_HOME:-\$HOME/.local/share}/Zeal/Zeal/docsets/"
      ln -s \$(realpath -m --relative-to "\$ZEAL_PATH" \$ORCHESTRA_ROOT/share/doc/llvm/llvm.docset) "\$ZEAL_PATH"
      ln -s \$(realpath -m --relative-to "\$ZEAL_PATH" \$ORCHESTRA_ROOT/share/doc/clang/clang.docset) "\$ZEAL_PATH"
      ln -s \$(realpath -m --relative-to "\$ZEAL_PATH" \$ORCHESTRA_ROOT/share/doc/mlir/mlir.docset) "\$ZEAL_PATH"
      EOF
#@ end

#@overlay/match by=overlay.all, expects=1
#@overlay/match-child-defaults missing_ok=True
---
components:
  llvm-documentation: #@ llvm_documentation_component()

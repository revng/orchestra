#@ load("/lib/fn-args.lib.yml", "mandatory")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")

#@ architectures = ["arm", "x86-64", "i386", "s390x", "aarch64", "mips", "mipsel", "native"]

#@yaml/text-templated-strings
---
#@ def revng_test_component(name=mandatory, options=mandatory):
(@= name @):
  builds:
    default:
      configure: |
        mkdir -p "$BUILD_DIR"
      install: |
        cd "$BUILD_DIR"
        rm -rf *
        "$ORCHESTRA_ROOT/libexec/revng/revng-test-configure" \
          (@ for test_name in [name] + [dependency for dependency in options["build_dependencies"] if dependency.startswith("test/")]: -@)
          "$ORCHESTRA_ROOT/share/revng/test/configuration"/(@= test_name.replace("test/", "") @)/*.yml \
          (@ end -@)
          --install-path "$ORCHESTRA_ROOT" \
          --destination . \
          (@= options["configure_args"] @)

        export REVNG_OPTIONS="--debug-log=verify"

        ninja install
      build_dependencies: #@ options["build_dependencies"]
#@ end

#@ def revng_qa_test():
configure_args: --target-type 'revng-qa\..*'
build_dependencies:
  - ninja
  - revng-qa
  - toolchain/win32-vc16/vc
  - toolchain/win32-vc19/vc
  - toolchain/win64-vc19/vc
  #@ for architecture in architectures:
  - toolchain/(@= architecture if architecture != "native" else "host" @)/gcc
  #@ end
  - ida
#@ end

#@ def revng_test():
configure_args: --target-type 'revng\..*'
build_dependencies:
  - ninja
  - revng
  - revng-qa
  - test/revng-qa
  - clang-release
#@ end

#@ def revng_c_test():
configure_args: --target-type 'revng-c\..*'
build_dependencies:
  - ninja
  - revng-c
  - revng-qa
  - test/revng
  - test/revng-qa
  - clang-release
#@ end

#@overlay/match by=overlay.all, expects=1
#@overlay/match-child-defaults missing_ok=True
---
#@yaml/text-templated-strings
components:
  _: #@ template.replace(revng_test_component("test/revng-qa", revng_qa_test()))
  _: #@ template.replace(revng_test_component("test/revng", revng_test()))
  _: #@ template.replace(revng_test_component("test/revng-c", revng_c_test()))

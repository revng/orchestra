#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("/lib/make.lib.yml", "make")
#@ load("/lib/optimization_flavors.lib.yml", "typical_project_flavors")

#@yaml/text-templated-strings
---
#@ def qemu_component(is_windows, use_asan=False):
repository: qemu
license: LICENSE
default_build: optimized
builds:
  #@ for flavor, f_options in typical_project_flavors(use_asan=use_asan).items():
    #@ build_type = f_options["cmake_build_type"]
    #@ cflags = f_options["extra_compiler_flags"]
    #@ ndebug = f_options["ndebug"]
    (@= flavor @):
      configure: |
        mkdir -p "$BUILD_DIR"
        cd "$BUILD_DIR";
        "$SOURCE_DIR/configure" \
          (@- if is_windows: @)
          --cc="x86_64-w64-mingw32-clang" \
          --cross-prefix="x86_64-w64-mingw32-" \
          --prefix="$ORCHESTRA_ROOT/x86_64-w64-mingw32" \
          --target-list="arm-libtinycode aarch64-libtinycode i386-libtinycode mips-libtinycode mipsel-libtinycode s390x-libtinycode x86_64-libtinycode" \
          --extra-cflags="(@= cflags @)" \
          --extra-ldflags="-Wl,--start-group -lmman -shared" \
          --disable-stack-protector \
          (@- else: @)
          --cc="(@= data.values.regular_c_compiler @)" \
          --prefix="$ORCHESTRA_ROOT" \
          --target-list="arm-libtinycode arm-linux-user arm-llvmhelpers aarch64-libtinycode aarch64-linux-user aarch64-llvmhelpers i386-libtinycode i386-linux-user i386-llvmhelpers mips-libtinycode mips-linux-user mips-llvmhelpers mipsel-libtinycode mipsel-linux-user mipsel-llvmhelpers s390x-libtinycode s390x-linux-user s390x-llvmhelpers x86_64-libtinycode x86_64-linux-user x86_64-llvmhelpers" \
          --extra-cflags="(@= cflags @)" \
          (@- end @)
          --disable-werror \
          --disable-kvm \
          --without-pixman \
          --disable-tools \
          --disable-system \
          --disable-libnfs \
          --disable-vde \
          --disable-gnutls \
          --disable-smartcard-nss \
          --disable-uuid \
          --disable-cap-ng \
          --python="$(which python2)" \
          (@ if build_type == "Debug": @)--enable-debug (@ end @)
      install: |
        cd "$BUILD_DIR"
        mkdir -p "${DESTDIR}${ORCHESTRA_ROOT}/x86_64-w64-mingw32/include"
        (@= make @) install
      build_dependencies:
        - host-c-toolchain
        - clang-release
        - glibc
        - llvm
      dependencies:
        #@ if/end not is_windows:
        - zlib
        - glib
      #@ if/end ndebug == False:
      ndebug: false
  #@ end
#@ end

#@overlay/match by=overlay.all, expects=1
#@overlay/match-child-defaults missing_ok=True
---
components:
  qemu: #@ qemu_component(False)
  windows/qemu: #@ qemu_component(True)

#@ load("@ytt:overlay", "overlay")
#@ load("/lib/create_component.lib.yml", "single_build_component")

#! Possible values for the cold_revng_test_method user option:
#! - host-xvfb: run the tests on the host machine, using xvfb and fluxbox
#! - host-x11: run the tests on the host machine, using the host running X11 and window manager
#! - podman-xvbf: run the tests on all the distros using podman and xvfb
#! - podman-forward-x11: run the tests on all the distros, forwarding the host X11 server

#@yaml/text-templated-strings
---
#@ def revng_distributable():
binary_archives: private
configure: |
  mkdir -p "$BUILD_DIR" && cd "$BUILD_DIR"
  touch empty_directory_ignore_it
install: |
  echo "Copying root"
  rm -rf "${TMP_ROOT}${ORCHESTRA_ROOT}/revng/root"
  mkdir -p "${TMP_ROOT}${ORCHESTRA_ROOT}/revng/root"
  cd "$ORCHESTRA_ROOT"

  # TODO: This should be derived from orchestra by whitelisting the transitive dependencies of revng-distributable
  COMPONENTS_TO_EXCLUDE=(
    glibc
    boost
    clang-release
    cmake
    llvm-documentation
  )
  # Select all installed toolchain components except toolchain/host/*
  COMPONENTS_TO_EXCLUDE+=(
    $(orc components --installed --json \
      | jq -r '
        .[].name
        | select(. | test("^toolchain/.*"))
        | select(. | test("^toolchain/host.*") | not)'
    )
  )

  for COMPONENT in "${COMPONENTS_TO_EXCLUDE[@]}"; do
    orc inspect component installed-files "$COMPONENT" \
      | grep -v 'libgcc_s.so' \
      | grep -v 'libc++.so' \
      | grep -v 'libc++abi.so' \
      | grep -v 'llvm-link' \
      | grep -v 'llc'
  done \
  | sed 's!^!/!' \
  | rsync \
    --archive \
    --exclude "/revng/" \
    --exclude "/include/" \
    --exclude "/share/man/" \
    --exclude "/share/qemu/" \
    --exclude "/share/graphviz/" \
    --exclude "/share/gcc-data/" \
    --exclude "/share/binutils-data/" \
    --exclude "/share/revng/qa/tests/analysis/" \
    --exclude "/share/revng/qa/tests/runtime/**.ll" \
    --exclude "/lib64/libclang-cpp.so*" \
    --exclude "libQt*.a" \
    --exclude-from=- \
    "$ORCHESTRA_ROOT/." \
    "${TMP_ROOT}${ORCHESTRA_ROOT}/revng/root/."

  cd "$TMP_ROOT/$ORCHESTRA_ROOT/revng"

  echo "Creating environment"
  cat > environment <<<'
  if test -n "$BASH" ; then SCRIPT=$BASH_SOURCE
  elif test -n "$TMOUT"; then SCRIPT=${.sh.file}
  elif test -n "$ZSH_NAME" ; then SCRIPT=${(%):-%x}
  elif test ${0##*/} = dash; then x=$(lsof -p $$ -Fn 2>/dev/null | grep environment | tail -1); SCRIPT=${x#n}; unset x
  else echo "Unsupported shell"
  fi
  ORCHESTRA_ROOT="$(realpath -s $(dirname $SCRIPT))/root"
  ORCHESTRA_DOTDIR="/nonexistent_directory_ignore_this"
  unset SCRIPT
  export PS1="[orchestra] $PS1"
  '

  cat >> environment <<EOF
  $(orchestra environment |
    grep -E "^export (PATH|LIBGL_DRIVERS_PATH|PKG_CONFIG_PATH|QML2_IMPORT_PATH|QT_PLUGIN_PATH|PYTHONPATH|LIBRARY_PATH)")
  unset ORCHESTRA_DOTDIR
  unset ORCHESTRA_ROOT
  EOF

  echo "Copying revng-distributable scripts"
  cp -a \
    "$ORCHESTRA_DOTDIR/support/revng-distributable/revng-update" \
    "$ORCHESTRA_DOTDIR/support/revng-distributable/revng-system-info" \
    "root/bin/"

  echo "Copying README.md"
  cp "$ORCHESTRA_DOTDIR/support/revng-distributable/README.md" .

  echo "Copying install-revng-dependencies"
  cp "$ORCHESTRA_DOTDIR/support/revng-distributable/dockers/install-revng-dependencies" root/bin/

  echo "Preparing scripts"
  cat > revng <<EOF
  #!/bin/bash
  DIR="\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
  source "\$DIR/environment"
  export REAL_ARGV0="\$0"
  exec "\$DIR/root/bin/revng" "\$@"
  EOF
  chmod +x revng

  cd root

  echo "Stripping components"
  find "share/orchestra" -name "*.idx" -type f | grep -vE 'revng|caliban'| xargs cat | while read EXECUTABLE; do
    if test -e "$EXECUTABLE" && head -c 4 "$EXECUTABLE" | grep '^.ELF' > /dev/null && file "$EXECUTABLE" | grep x86-64 | grep -E '(shared|dynamic)' > /dev/null; then
      echo strip "$EXECUTABLE"
      strip "$EXECUTABLE"
    fi
  done

  echo "revng-distributable updater info"
  mkdir -p share/revng-distributable
  cd share/revng-distributable
  echo 1 > version
  cat > post-update <<eof
  #!/bin/bash
  set -e
  ./revng --help >& /dev/null
  ./revng lift --help >& /dev/null
  echo "Update successful!"
  eof
  chmod +x post-update

  echo "Final cleanup"
  cd "${TMP_ROOT}${ORCHESTRA_ROOT}"
  find . -not -type d -not -path './revng/*' -delete
  find . -type d -empty -delete

  if test "$RUN_TESTS" -eq 1; then
    # CI can't run Docker-in-Docker (or Podman-in-Docker)
    # We can only test by spawning a local Xvfb server
    if [[ ! -z "${GITLAB_CI:-}" ]]; then
      export USE_XVFB=1
      cd "${TMP_ROOT}${ORCHESTRA_ROOT}/revng"
      "$ORCHESTRA_DOTDIR/support/revng-distributable/test.sh"

    elif [[ "$COLD_REVNG_TEST_METHOD" == host-* ]]; then
      if [[ "$COLD_REVNG_TEST_METHOD" == "host-xvfb" ]]; then
        export USE_XVFB=1
      fi
      cd "${TMP_ROOT}${ORCHESTRA_ROOT}/revng"

      export COLD_REVNG_KILL_METHOD=wmctrl
      "$ORCHESTRA_DOTDIR/support/revng-distributable/test.sh"

    else
      if [[ "$COLD_REVNG_TEST_METHOD" == "podman-forward-x11" ]]; then
        # Remember: the host must allow access to the X11 socket! (xhost +)
        PODMAN_OPTIONS="-v /tmp/.X11-unix:/tmp/.X11-unix"
      else
        PODMAN_OPTIONS="-e USE_XVFB=1"
      fi

      for DOCKERFILE in $ORCHESTRA_DOTDIR/support/revng-distributable/dockers/*.docker; do
        DISTRO="$(basename "${DOCKERFILE%%.docker}")"
        IMAGE_NAME="revng-test-image:$DISTRO"

        echo "Testing revng-distributable in $DISTRO"
        podman build --pull -t "$IMAGE_NAME" -f "$DOCKERFILE"
        # TODO: fix the test environment so that we can properly close revng-ui without using kill
        if ! podman run -t --rm $PODMAN_OPTIONS \
          --security-opt=seccomp=unconfined \
          -e "COLD_REVNG_KILL_METHOD=kill" \
          -w "/orchestra/.orchestra/$(realpath --relative-to "$ORCHESTRA_DOTDIR" "$TMP_ROOT")/$ORCHESTRA_ROOT/revng" \
          -v "$(readlink -f "$ORCHESTRA_DOTDIR/..")":/orchestra \
          "$IMAGE_NAME" \
          bash -c /orchestra/.orchestra/support/revng-distributable/test.sh;
        then
          echo "[!] $IMAGE_NAME test failed"
          exit 1
        else
          echo "[+] $IMAGE_NAME test passed"
        fi
      done
      echo "[+] revng-distributable tests passed"
    fi
  fi
build_dependencies:
  - ui/cold-revng
skip_post_install: true
#@ end

#@overlay/match by=overlay.all, expects=1
#@overlay/match-child-defaults missing_ok=True
---
components:
  revng-distributable: #@ single_build_component(**revng_distributable())

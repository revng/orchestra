#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")

#@ load("/lib/create-component.lib.yml", "single_build_component")

#@yaml/text-templated-strings
---
#@ def x_args(source_url, extra_args="", dependencies=[], build_dependencies=[], license="COPYING"):
license: (@= license @)
configure: |
  mkdir -p "$BUILD_DIR"
  extract.sh --into "$BUILD_DIR" "(@= source_url @)"

  cd "$BUILD_DIR"
  ./configure \
    --prefix="$ORCHESTRA_ROOT" \
    --enable-shared \
    --disable-static \
    --disable-selective-werror(@= " \\" if extra_args != "" else "" @)
    (@= extra_args @)
build_system: make
build_dependencies:
  - host-c-toolchain
  - #@ template.replace(build_dependencies)
dependencies:
  - host-libc
  - #@ template.replace(dependencies)
#@ end

#@yaml/text-templated-strings
---
#@ def x_matrix():
x11/xcb-proto:
  source_url: "https://xorg.freedesktop.org/archive/individual/proto/xcb-proto-1.15.tar.xz"
  build_dependencies: ["python"]
x11/xorg-proto:
  source_url: "https://xorg.freedesktop.org/archive/individual/proto/xorgproto-2022.2.tar.xz"
  license: COPYING-x11proto
xtrans:
  source_url: "https://xorg.freedesktop.org/releases/individual/lib/xtrans-1.4.0.tar.bz2"
libxau:
  source_url: "https://xorg.freedesktop.org/releases/individual/lib/libXau-1.0.11.tar.xz"
  dependencies: ["x11/xorg-proto"]
libxcb:
  source_url: "https://xorg.freedesktop.org/archive/individual/lib/libxcb-1.15.tar.xz"
  extra_args: "--disable-devel-docs --disable-selinux"
  dependencies: ["libxau", "x11/xcb-proto"]
  build_dependencies: ["python"]
libx11:
  source_url: "https://www.x.org/releases/individual/lib/libX11-1.8.4.tar.xz"
  extra_args: "--without-xmlto --without-fop --without-xsltproc --disable-specs --enable-ipv6"
  dependencies: ["libxcb", "xtrans", "x11/xorg-proto"]
libxkbfile:
  source_url: "https://www.x.org/releases/individual/lib/libxkbfile-1.1.2.tar.xz"
  dependencies: ["libx11"]
#@ end

#@yaml/text-templated-strings
---
#@ def x_components():
#@ for name, options in dict(x_matrix()).items():
(@= name @): #@ single_build_component(**x_args(**options))
#@ end
#@ end

#@overlay/match by=overlay.all, expects=1
#@overlay/match-child-defaults missing_ok=True
---
components:
  _: #@ template.replace(x_components())
